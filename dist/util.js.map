{"version":3,"sources":["../src/util.js"],"names":["isTel","v","test","clone","name","source","target","apply","arguments","Object","defineProperty","value","writable","key","hasOwnProperty","prototype","srcProto","module","exports","assign","require"],"mappings":";;;;AAAA;;;;AAIA,IAAMA,QAAQ,SAARA,KAAQ,CAACC,CAAD;AAAA,WAAO,uBAAsBC,IAAtB,CAA2BD,CAA3B;AAAP;AAAA,CAAd;;AAEA;;;;;;;AAOA,IAAME,QAAQ,SAARA,KAAQ,CAAUC,IAAV,EAAgB;AAC1B,QAAMC,SAAS,IAAf;AACA,QAAMC,SAAS,SAATA,MAAS,GAAY;AAAE,eAAOD,OAAOE,KAAP,CAAa,IAAb,EAAmBC,SAAnB,CAAP;AAAuC,KAApE;;AAEA;AACA,QAAIJ,IAAJ,EAAU;AACNK,eAAOC,cAAP,CAAsBJ,MAAtB,EAA8B,MAA9B,EAAsC,EAACK,OAAOP,IAAR,EAAcQ,UAAU,KAAxB,EAAtC;AACH;;AAED;AACA,SAAK,IAAMC,GAAX,IAAkBR,MAAlB,EAA0B;AACtB,YAAIA,OAAOS,cAAP,CAAsBD,GAAtB,CAAJ,EAAgCP,OAAOO,GAAP,IAAcR,OAAOQ,GAAP,CAAd;AACnC;;AAED;AACA,QAAIR,OAAOU,SAAP,IAAoB,QAAOV,OAAOU,SAAd,MAA4B,QAApD,EAA8D;AAC1D,YAAMC,WAAWX,OAAOU,SAAxB;AACA,aAAK,IAAMF,IAAX,IAAkBG,QAAlB,EAA4B;AACxB,gBAAIA,SAASF,cAAT,CAAwBD,IAAxB,CAAJ,EAAkCP,OAAOS,SAAP,CAAiBF,IAAjB,IAAwBG,SAASH,IAAT,CAAxB;AACrC;AACJ;;AAED,WAAOP,MAAP;AACH,CAvBD;;AAyBAW,OAAOC,OAAP,GAAiB;AACblB,gBADa;AAEbG,gBAFa;AAGbgB,YAAQC,QAAQ,iBAAR;AAHK,CAAjB","file":"util.js","sourcesContent":["/**\n * Created by henryleu on 14/07/2017.\n */\n\nconst isTel = (v) => /^1[3|4|5|7|8]\\d{9}$/.test(v);\n\n/**\n * Clone a new class constructor by invoking\n * source class constructor's method of it\n * TODO examples\n * @param name new Class's name\n * @returns {target}\n */\nconst clone = function (name) {\n    const source = this;\n    const target = function () { return source.apply(this, arguments); };\n\n    // rename constructor\n    if (name) {\n        Object.defineProperty(target, 'name', {value: name, writable: false});\n    }\n\n    // copy source function's properties\n    for (const key in source) {\n        if (source.hasOwnProperty(key)) target[key] = source[key]\n    }\n\n    // copy source function's prototype properties\n    if (source.prototype && typeof source.prototype === 'object') {\n        const srcProto = source.prototype;\n        for (const key in srcProto) {\n            if (srcProto.hasOwnProperty(key)) target.prototype[key] = srcProto[key];\n        }\n    }\n\n    return target;\n};\n\nmodule.exports = {\n    isTel,\n    clone,\n    assign: require('./object-assign')\n};\n"]}